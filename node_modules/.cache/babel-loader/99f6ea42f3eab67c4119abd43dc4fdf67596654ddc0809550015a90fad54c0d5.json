{"ast":null,"code":"const API_BASE_URL = 'http://localhost:3001/api';\nexport const storage = {\n  getJobPostings: async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/job-postings`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch job postings');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error reading job postings:', error);\n      return [];\n    }\n  },\n  addJobPosting: async posting => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/job-postings`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(posting)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create job posting');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error creating job posting:', error);\n      throw new Error('Failed to create job posting');\n    }\n  },\n  updateJobPosting: async (id, posting) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/job-postings/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(posting)\n      });\n      if (!response.ok) {\n        if (response.status === 404) {\n          return null;\n        }\n        throw new Error('Failed to update job posting');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error updating job posting:', error);\n      throw new Error('Failed to update job posting');\n    }\n  },\n  deleteJobPosting: async id => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/job-postings/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        if (response.status === 404) {\n          return false;\n        }\n        throw new Error('Failed to delete job posting');\n      }\n      return true;\n    } catch (error) {\n      console.error('Error deleting job posting:', error);\n      throw new Error('Failed to delete job posting');\n    }\n  }\n};","map":{"version":3,"names":["API_BASE_URL","storage","getJobPostings","response","fetch","ok","Error","json","error","console","addJobPosting","posting","method","headers","body","JSON","stringify","updateJobPosting","id","status","deleteJobPosting"],"sources":["/Users/vchartier/Projects/HRCursor/src/services/storage.ts"],"sourcesContent":["import { JobPosting } from '../types';\n\nconst API_BASE_URL = 'http://localhost:3001/api';\n\nexport const storage = {\n  getJobPostings: async (): Promise<JobPosting[]> => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/job-postings`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch job postings');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error reading job postings:', error);\n      return [];\n    }\n  },\n\n  addJobPosting: async (posting: Omit<JobPosting, 'id'>): Promise<JobPosting> => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/job-postings`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(posting),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to create job posting');\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error creating job posting:', error);\n      throw new Error('Failed to create job posting');\n    }\n  },\n\n  updateJobPosting: async (id: string, posting: Omit<JobPosting, 'id'>): Promise<JobPosting | null> => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/job-postings/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(posting),\n      });\n      \n      if (!response.ok) {\n        if (response.status === 404) {\n          return null;\n        }\n        throw new Error('Failed to update job posting');\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error updating job posting:', error);\n      throw new Error('Failed to update job posting');\n    }\n  },\n\n  deleteJobPosting: async (id: string): Promise<boolean> => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/job-postings/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        if (response.status === 404) {\n          return false;\n        }\n        throw new Error('Failed to delete job posting');\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('Error deleting job posting:', error);\n      throw new Error('Failed to delete job posting');\n    }\n  }\n}; "],"mappings":"AAEA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,OAAO,GAAG;EACrBC,cAAc,EAAE,MAAAA,CAAA,KAAmC;IACjD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,eAAe,CAAC;MAC5D,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAO,EAAE;IACX;EACF,CAAC;EAEDE,aAAa,EAAE,MAAOC,OAA+B,IAA0B;IAC7E,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,eAAe,EAAE;QAC3DY,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;MAC9B,CAAC,CAAC;MAEF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAM,IAAIF,KAAK,CAAC,8BAA8B,CAAC;IACjD;EACF,CAAC;EAEDW,gBAAgB,EAAE,MAAAA,CAAOC,EAAU,EAAEP,OAA+B,KAAiC;IACnG,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,iBAAiBkB,EAAE,EAAE,EAAE;QACjEN,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;MAC9B,CAAC,CAAC;MAEF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;QAChB,IAAIF,QAAQ,CAACgB,MAAM,KAAK,GAAG,EAAE;UAC3B,OAAO,IAAI;QACb;QACA,MAAM,IAAIb,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAM,IAAIF,KAAK,CAAC,8BAA8B,CAAC;IACjD;EACF,CAAC;EAEDc,gBAAgB,EAAE,MAAOF,EAAU,IAAuB;IACxD,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,iBAAiBkB,EAAE,EAAE,EAAE;QACjEN,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;QAChB,IAAIF,QAAQ,CAACgB,MAAM,KAAK,GAAG,EAAE;UAC3B,OAAO,KAAK;QACd;QACA,MAAM,IAAIb,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,OAAO,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAM,IAAIF,KAAK,CAAC,8BAA8B,CAAC;IACjD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}